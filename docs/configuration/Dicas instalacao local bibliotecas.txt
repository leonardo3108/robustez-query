# comandos de instalação de libraries necessárias para uso local

Instalação de haystack:
on ubuntu
    (conda activate robustez-query)
    pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org  farm-haystack

on windows:
    (após conda activate robustez-query (python 3.7))

    haystack:
        pip install git+https://github.com/deepset-ai/haystack.git

    pygaggle:
        pip install git+https://github.com/castorini/pygaggle.git
        Acrescentar à variável de ambiente PATH:    %JAVA_HOME%\bin\client;%JAVA_HOME%\bin\server;
        Para evitar erro: https://stackoverflow.com/questions/20970732/jnius-1-1-import-error 


Pygaggle e pyserini
    pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org git+https://github.com/castorini/pygaggle.git
    pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org pyserini
    pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org pandas 

    (se não tiver sido instalado o hastack, que já tem faiss-cpu)
    conda install -y -c pytorch faiss-cpu
        pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org faiss-cpu --no-cache

Para gráficos:
    python -m pip install -U pip
    python -m pip install -U matplotlib
    pip install seaborn

Se precisar:
    conda install -c anaconda requests
    conda install -c anaconda pandas

Obs.: 

i) Em caso de CondaHTTPError: conda config --set ssl_verify no
ii) No windows, usar prompt do anaconda para as intalações e ativar o enviroment robustez-query.
iii) Em caso de problema com numpy
        python -m pip uninstall numpy ou conda uninstall numpy
        pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org numpy==1.19.2
    ou 
        conda install -c conda-forge numpy==1.19.2
        conda install -c conda-forge python-dateutil

    # pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org numpy

    Msg:
        Installing collected packages: numpy
        ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
        tensorflow 2.5.0 requires numpy~=1.19.2, but you have numpy 1.21.4 which is incompatible.
        ray 1.5.0 requires pydantic>=1.8, but you have pydantic 1.7.4 which is incompatible.
        Successfully installed numpy-1.21.4

# para acesso a bd msaccess:
conda install -c anaconda pyodbc   

# para configuração no windows
conda create -n unicamp python=3.8
